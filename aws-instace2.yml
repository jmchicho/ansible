---
- name: Provision an EC2 Instance
  hosts: local
  connection: local
  gather_facts: False
  tags: provisioning

  vars:
    instance_type: t2.micro
    security_group: ansible_security_grp
    image: ami-0b69ea66ff7391e80
    keypair: conexion
    region: us-east-1
    count: 1
    vpc_name: new_ansible_vpc
    cidr: 10.10.0.0/16
    cdir_subnet: 10.10.1.0/24
 
  tasks:

    # Crea una nueva VPC
    - name: Create a VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ cidr }}"
        region: "{{ region }}"
        tags:
          Name: "{{ vpc_name }}"
      register: ans_vpc

    # Obtine los datos de la VPC
    - name: Get VPC facts
      ec2_vpc_net_facts:
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ vpc_name }}"
      register: vpc_ansible
   
    - name: Debug vpc
      debug:
        msg: Variable de VPC {{ ans_vpc.vpc.id }}
    
    - name: Create Internet Gateway (IGW)
      ec2_vpc_igw:
        region: "{{ region }}"
        vpc_id: "{{ ans_vpc.vpc.id }}"
        state: present
      register: igw

    - name: Debbuging IGW
      debug:
        msg: IGW {{ igw }}

    - name: Create new Subnet
      ec2_vpc_subnet:
        cidr: "{{ cdir_subnet }}"
        state: present
        region: "{{ region }}"
        vpc_id: "{{ ans_vpc.vpc.id }}"
        map_public: yes
        tags:
          Name: Public subnet
      register: subnet_ansible

    - name: Debbuging subnet
      debug:
        msg: variable de subnet {{ subnet_ansible }}

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ ans_vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: Public
        subnets:
          - "{{ subnet_ansible.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_route_table

    # Crea el Security Group
    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: Security Group for Ansible EC2
        region: "{{ region }}"
        vpc_id: "{{ ans_vpc.vpc.id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall

    # Instancias de EC2
    - name: Launching new EC2 Instance
      ec2: 
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        wait_timeout: 500 
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{ count }}"
        vpc_subnet_id: "{{ subnet_ansible.subnet.id }}"
      register: ec2_ansible

    - name: Add the newly created EC2 instance(s) to the local host group
      local_action: lineinfile 
        path=ansible.txt
        regexp={{ item.public_ip }}
        insertafter='\[ansible\]'
        line={{ item.dns_name }}
      with_items: '{{ec2_ansible.instances}}'

    - name: Add new instance to Ansible's host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2_ansible.instances }}"

    - name: Let's wait for SSH to come up. Usually that takes ~10 seconds
      local_action: wait_for 
        host={{ item.public_ip }}
        port=22 
        state=started
      with_items: "{{ ec2_ansible.instances }}"

    - name: Add TAG to Instance(s)
      local_action:
        ec2_tag resource={{ item.id }}
        region={{ region }}
        state=present
      with_items: '{{ ec2_ansible.instances }}'
      args:
        tags:
          Name: ansible

